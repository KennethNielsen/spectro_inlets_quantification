[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"


[project]
name = "spectro_inlets_quantification"
authors = [
    {name = "Spectro Inlets", email = "software@spectroinlets.com"},
]
description = "The ECMS quantification package"
requires-python = ">=3.7"
keywords = ["ECMS", "quantification", "data treatment"]
license = {text = "Proprietary"}
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Chemistry",
]
dependencies = [
    # please don't increase these version numbers without a reason.
    "numpy>=1.9",
    "scipy>=1.7",
    "matplotlib>=3.5",
    "pandas>=1.4",
    "attrs>=22",
]
dynamic = ["version", "readme"]


[project.optional-dependencies]
dev = [
    "invoke",
    "rich",
    "black==23.3.0",
    "ruff==0.0.270",
    "mypy==1.3.0",
    "pytest==7.3.1",
    "sphinx",
    "myst-parser",
    "sphinx-rtd-theme",
    # This results in an error when running setup.py:
    # "git+https://github.com/executablebooks/sphinx-proof@d37495f",
    "freezegun",
    "toml",
]
rest = ["docutils>=0.3", "pack ==1.1, ==1.3"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "spectro_inlets_quantification.__version__"}
# readme = {file = ["README.md"]}
# The readme prevents uploading because PyPI expects rst. I specified in setup.py that it is
#   markdown, but can't find the syntax to do it here. See:
#   https://packaging.python.org/en/latest/specifications/core-metadata/#description-content-type

[tool.coverage.report]
exclude_lines = [
    "def .*?_demo\\(.*?\\) -> None:",
    "def .*?_demo\\(.*?\\):",
    "if __name__ == .__main__.:"
]

[tool.ruff]
line-length = 100
# The documentation for the checks, and the full list of error code categories, is available here:
# https://beta.ruff.rs/docs/rules/
select = [
    # The broad sets
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "W",  # pycodestyle warnings
    # The plugins
    "A",  # builtins
    "C",  # flake8-comprehensions
    "C4",  # comprehensions
    "D",  # pydocstyle
    "I",  # isort
    "ISC",  # implicit string concatenation
    "INP",  # no pep420 (name space packages)
    "S",  #  bandit
    "T10",  # debugger
    "YTT", # 2020
    # "B",  # flake8-bugbear
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
strict = true
strict_optional = false

[tool.black]
line-length = 100
